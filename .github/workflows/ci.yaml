name: Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up Version
        run: sed -i 's/v0.0.0/${{ github.ref_name }}/' version.json
      -
        name: Set up Syft
        uses: anchore/sbom-action/download-syft@v0
      -
        name: Set up Cosign
        uses: sigstore/cosign-installer@v3
      -
        name: Set up Go
        uses: actions/setup-go@v5
      -
        name: Set up Go versioninfo
        run: |
          go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
          go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo
      -
        name: Run tests
        run: go test -v -race ./...
      -
        name: Run builds
        run: |
          go build -o fox main.go
          go build -o fox -tags minimal main.go
      -
        name: Run clean
        run: rm fox
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: ~/.cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force
